id: m5-data-pipeline
namespace: m5_sales

tasks:
  - id: create_gcs_bucket
    type: io.kestra.plugin.gcp.gcs.CreateBucket
    ifExists: SKIP
    storageClass: REGIONAL
    name: "{{kv('GCP_BUCKET_NAME')}}" # make sure it's globally unique!

  - id: create_bq_dataset
    type: io.kestra.plugin.gcp.bigquery.CreateDataset
    name: "{{kv('GCP_DATASET')}}"
    ifExists: SKIP

  - id: dbt_cloud_job
    type: io.kestra.plugin.dbt.cloud.TriggerRun
    jobId: "{{ kv('DBT_JOB_ID') }}"
    accountId: "{{ kv('DBT_ACCOUNT_ID') }}"
    token: "{{ kv('DBT_API_TOKEN') }}"
    wait: true

  - id: update_dataset
    type: io.kestra.plugin.core.flow.Dag
    tasks:
      - task:
          id: report_sales_by_item
          type: io.kestra.plugin.gcp.bigquery.UpdateTable
          projectId: "{{ kv('GCP_PROJECT_ID') }}"
          dataset: "{{ kv('GCP_DATASET') }}"
          table: report_sales_by_item
          expirationDuration: PT48H
      - task:
          id: report_sales_by_store
          type: io.kestra.plugin.gcp.bigquery.UpdateTable
          projectId: "{{ kv('GCP_PROJECT_ID') }}"
          dataset: "{{ kv('GCP_DATASET') }}"
          table: report_sales_by_store
          expirationDuration: PT48H

      - task:
          id: report_sales_by_time
          type: io.kestra.plugin.gcp.bigquery.UpdateTable
          projectId: "{{ kv('GCP_PROJECT_ID') }}"
          dataset: "{{ kv('GCP_DATASET') }}"
          table: report_sales_by_time
          expirationDuration: PT48H

  - id: fail
    type: io.kestra.plugin.scripts.shell.Commands
    runner: PROCESS
    commands:
      - exit 1

errors:
  - id: send_email
    type: io.kestra.plugin.notifications.mail.MailSend
    from: hello@kestra.io
    to: hello@kestra.io
    username: "{{ kv('EMAIL_ADDRESS') }}"
    password: "{{ kv('EMAIL_PASSWORD') }}"
    host: mail.privateemail.com
    port: 465 # or 587
    subject: "Kestra workflow failed for the flow {{flow.id}} in the namespace {{flow.namespace}}"
    htmlTextContent: "Failure alert for flow {{ flow.namespace }}.{{ flow.id }} with ID {{ execution.id }}"
          
  # - id: gcp_project_id
  #   type: io.kestra.plugin.core.kv.Set
  #   key: GCP_PROJECT_ID
  #   kvType: STRING
  #   value: de-zoomcamp-project-456204 # TODO replace with your project id

  # - id: gcp_location
  #   type: io.kestra.plugin.core.kv.Set
  #   key: GCP_LOCATION
  #   kvType: STRING
  #   value: us-west2

  # - id: gcp_bucket_name
  #   type: io.kestra.plugin.core.kv.Set
  #   key: GCP_BUCKET_NAME
  #   kvType: STRING
  #   value: m5-sales-kestra # TODO make sure it's globally unique!

  # - id: gcp_dataset
  #   type: io.kestra.plugin.core.kv.Set
  #   key: GCP_DATASET
  #   kvType: STRING
  #   value: m5_sales_kestra

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDENTIAL')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"